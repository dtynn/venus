github.com/filecoin-project/venus/venus-shared/api/chain/v1.FullNode <> github.com/filecoin-project/lotus/api.FullNode:
	- AuthVerify
	+ BlockTime
	- ChainBlockstoreInfo
	- ChainCheckBlockstore
	- ChainGetGenesis
	- ChainGetNode
	+ ChainGetRandomnessFromBeacon
	+ ChainGetRandomnessFromTickets
	+ ChainGetReceipts
	+ ChainList
	+ ChainSyncHandleNewTipSet
	- ClientCalcCommP
	- ClientCancelDataTransfer
	- ClientCancelRetrievalDeal
	- ClientDataTransferUpdates
	- ClientDealPieceCID
	- ClientDealSize
	- ClientFindData
	- ClientGenCar
	- ClientGetDealInfo
	- ClientGetDealStatus
	- ClientGetDealUpdates
	- ClientGetRetrievalUpdates
	- ClientHasLocal
	- ClientImport
	- ClientListDataTransfers
	- ClientListDeals
	- ClientListImports
	- ClientListRetrievals
	- ClientMinerQueryOffer
	- ClientQueryAsk
	- ClientRemoveImport
	- ClientRestartDataTransfer
	- ClientRetrieve
	- ClientRetrieveTryRestartInsufficientFunds
	- ClientRetrieveWithEvents
	- ClientStartDeal
	- ClientStatelessDeal
	- Closing
	+ Concurrent
	- CreateBackup
	- Discover
	+ GasBatchEstimateMessageGas
	> GasEstimateMessageGas {[func(context.Context, *chain.Message, *v1.MessageSendSpec, chain.TipSetKey) (*chain.Message, error) <> func(context.Context, *types.Message, *api.MessageSendSpec, types.TipSetKey) (*types.Message, error)] base=func in type: #2 input; nested={[*v1.MessageSendSpec <> *api.MessageSendSpec] base=pointed type; nested={[v1.MessageSendSpec <> api.MessageSendSpec] base=struct field; nested={[v1.MessageSendSpec <> api.MessageSendSpec] base=exported fields count: 2 != 1; nested=nil}}}}
	+ GetActor
	+ GetEntry
	+ GetFullBlock
	+ GetParentStateRootActor
	+ HasPassword
	- ID
	+ ListActor
	+ LockWallet
	- LogAlerts
	- LogList
	- LogSetLevel
	- MarketAddBalance
	- MarketGetReserved
	- MarketReleaseFunds
	- MarketReserveFunds
	- MarketWithdraw
	+ MessageWait
	> MpoolBatchPushMessage {[func(context.Context, []*chain.Message, *v1.MessageSendSpec) ([]*chain.SignedMessage, error) <> func(context.Context, []*types.Message, *api.MessageSendSpec) ([]*types.SignedMessage, error)] base=func in type: #2 input; nested={[*v1.MessageSendSpec <> *api.MessageSendSpec] base=pointed type; nested={[v1.MessageSendSpec <> api.MessageSendSpec] base=struct field; nested={[v1.MessageSendSpec <> api.MessageSendSpec] base=exported fields count: 2 != 1; nested=nil}}}}
	+ MpoolDeleteByAdress
	+ MpoolPublishByAddr
	+ MpoolPublishMessage
	> MpoolPushMessage {[func(context.Context, *chain.Message, *v1.MessageSendSpec) (*chain.SignedMessage, error) <> func(context.Context, *types.Message, *api.MessageSendSpec) (*types.SignedMessage, error)] base=func in type: #2 input; nested={[*v1.MessageSendSpec <> *api.MessageSendSpec] base=pointed type; nested={[v1.MessageSendSpec <> api.MessageSendSpec] base=struct field; nested={[v1.MessageSendSpec <> api.MessageSendSpec] base=exported fields count: 2 != 1; nested=nil}}}}
	+ MpoolSelects
	- MsigGetAvailableBalance
	- MsigGetPending
	- MsigGetVestingSchedule
	- NetAgentVersion
	- NetAutoNatStatus
	- NetBandwidthStats
	- NetBandwidthStatsByPeer
	- NetBandwidthStatsByProtocol
	- NetBlockAdd
	- NetBlockList
	- NetBlockRemove
	- NetConnect
	- NetConnectedness
	- NetDisconnect
	- NetFindPeer
	- NetPeerInfo
	- NetPeers
	- NetPubsubScores
	+ NetworkConnect
	+ NetworkFindPeer
	+ NetworkFindProvidersAsync
	+ NetworkGetBandwidthStats
	+ NetworkGetClosestPeers
	+ NetworkGetPeerAddresses
	+ NetworkGetPeerID
	+ NetworkPeers
	- NodeStatus
	+ ProtocolParameters
	+ ResolveToKeyAddr
	- Session
	+ SetConcurrent
	+ SetPassword
	- Shutdown
	- StateAllMinerFaults
	> StateCall {[func(context.Context, *chain.Message, chain.TipSetKey) (*v1.InvocResult, error) <> func(context.Context, *types.Message, types.TipSetKey) (*api.InvocResult, error)] base=func out type: #0 input; nested={[*v1.InvocResult <> *api.InvocResult] base=pointed type; nested={[v1.InvocResult <> api.InvocResult] base=struct field; nested={[v1.InvocResult <> api.InvocResult] base=exported field type: #4 field named ExecutionTrace; nested={[stmgr.ExecutionTrace <> types.ExecutionTrace] base=struct field; nested={[stmgr.ExecutionTrace <> types.ExecutionTrace] base=exported field type: #4 field named GasCharges; nested={[[]*stmgr.GasTrace <> []*types.GasTrace] base=slice element; nested={[*stmgr.GasTrace <> *types.GasTrace] base=codec marshaler implementations for codec 4: false != true; nested=nil}}}}}}}}
	- StateChangedActors
	- StateCompute
	- StateDecodeParams
	- StateEncodeParams
	- StateListMessages
	+ StateMinerSectorSize
	+ StateMinerWorkerAddress
	- StateReadState
	- StateReplay
	- SyncCheckBad
	- SyncCheckpoint
	- SyncIncomingBlocks
	- SyncMarkBad
	- SyncUnmarkAllBad
	- SyncUnmarkBad
	- SyncValidateTipset
	+ UnLockWallet
	+ Verify
	+ VerifyEntry
	> Version {[func(context.Context) (v1.Version, error) <> func(context.Context) (api.APIVersion, error)] base=func out type: #0 input; nested={[v1.Version <> api.APIVersion] base=struct field; nested={[v1.Version <> api.APIVersion] base=exported fields count: 2 != 3; nested=nil}}}
	+ WalletAddresses
	- WalletDelete
	> WalletExport {[func(address.Address, string) (*wallet.KeyInfo, error) <> func(context.Context, address.Address) (*types.KeyInfo, error)] base=func in type: #0 input; nested={[address.Address <> context.Context] base=type kinds: struct != interface; nested=nil}}
	> WalletImport {[func(*wallet.KeyInfo) (address.Address, error) <> func(context.Context, *types.KeyInfo) (address.Address, error)] base=func in num: 1 != 2; nested=nil}
	- WalletList
	- WalletNew
	+ WalletNewAddress
	> WalletSign {[func(context.Context, address.Address, []uint8, wallet.MsgMeta) (*crypto.Signature, error) <> func(context.Context, address.Address, []uint8) (*crypto.Signature, error)] base=func in num: 4 != 3; nested=nil}
	+ WalletState
	- WalletValidateAddress
	- WalletVerify

